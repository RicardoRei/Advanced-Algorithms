Introdução

The goal of this project is to maintain the connectivity information of an underlying forest.
To store this information we are going to use the Link-Cut tree data structure(with some minor changes). The motivation behind this is that "if we represent the forest as a regular collection of parent pointer trees, it might take us a long time to find the root of a given node"





Data structure:

We use this particular structure because it manages to provide a time complexity of O(log n) amortized for the operations of Link,Cut,Path(not implemented on the project but basically perform some sort of operation while travelling through the preferred paths) and FindRoot.
This happens because "LCT's divide each tree in the original represented forest into vertex-disjoint paths, where each path is represented by a Splay tree."
A Splay Tree is a "self-adjusting binary search tree with the additional property that recently accessed elements are quick to access again. "
"Every operation on the splay tree is combined with the basic operation of splaying which rearranges the tree so that the element accessed more recently is placed at the root of the tree.""


